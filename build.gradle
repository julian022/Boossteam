plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.sonarqube' version '4.4.1.3373'
    id 'jacoco'
}

group = 'co.edu.uniajc'
version = '0.0.1-SNAPSHOT'
description = 'Sistema de gestión y relación con los clientes'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

jacoco {
    toolVersion = '0.8.11' // o la más reciente compatible
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true   // SonarCloud usa este XML
        csv.required = false
        html.required = true
    }
}

sonar {
    properties {
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.organization", "julian022"          // tu org en SonarCloud
        property "sonar.projectKey", "julian022_Boossteam"  // EXACTO como aparece en SonarCloud
        // Estas rutas son las convencionales de Gradle:
        property "sonar.junit.reportPaths", "build/test-results/test"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}
